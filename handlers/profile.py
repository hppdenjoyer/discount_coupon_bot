from aiogram import Router, F, Dispatcher
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import INVITE_FRIEND, VIEW_PURCHASES, ADD_BALANCE
from models.user import get_user_profile

router = Router()

@router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def handle_profile(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è."""
    await show_profile(message)

@router.callback_query(F.data == "back_to_profile")
async def back_to_profile(query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å."""
    await query.answer()
    await show_profile(query.message, edit=True)

async def show_profile(message: Message, edit: bool = False):
    """–ü–æ–∫–∞–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = message.chat.id if isinstance(message, Message) else message.chat.id
    profile = get_user_profile(user_id)

    profile_text = f"""
üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:

ID: {user_id}
–ë–∞–ª–∞–Ω—Å: {profile['balance']} —Ä—É–±.
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: {profile['purchases_count']}
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {profile['invited_friends']}
    """

    builder = InlineKeyboardBuilder()
    builder.button(text=INVITE_FRIEND, callback_data="profile_invite")
    builder.button(text=VIEW_PURCHASES, callback_data="profile_purchases")
    builder.button(text=ADD_BALANCE, callback_data="profile_balance")
    builder.adjust(1)

    if edit:
        await message.edit_text(profile_text, reply_markup=builder.as_markup())
    else:
        await message.answer(profile_text, reply_markup=builder.as_markup())

@router.callback_query(F.data.startswith("profile_"))
async def profile_callback(query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è."""
    await query.answer()
    action = query.data.replace("profile_", "")

    if action == "invite":
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        invite_link = f"https://t.me/share/url?url=https://t.me/your_bot?start={query.from_user.id}"
        builder = InlineKeyboardBuilder()
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_profile")

        await query.message.edit_text(
            "üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å!\n\n"
            f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {invite_link}",
            reply_markup=builder.as_markup()
        )

    elif action == "purchases":
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫
        purchases = get_user_profile(query.from_user.id)['purchases']
        if not purchases:
            purchase_text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–∫—É–ø–æ–∫."
        else:
            purchase_text = "–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏:\n\n"
            for purchase in purchases:
                purchase_text += f"üè∑ {purchase['name']} - {purchase['date']}\n"

        builder = InlineKeyboardBuilder()
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_profile")

        await query.message.edit_text(
            purchase_text,
            reply_markup=builder.as_markup()
        )

    elif action == "balance":
        # –ú–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        builder = InlineKeyboardBuilder()
        builder.button(text="100 ‚ÇΩ", callback_data="payment_100")
        builder.button(text="500 ‚ÇΩ", callback_data="payment_500")
        builder.button(text="1000 ‚ÇΩ", callback_data="payment_1000")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_profile")
        builder.adjust(1)

        await query.message.edit_text(
            "üí∞ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:",
            reply_markup=builder.as_markup()
        )

def register_profile_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è."""
    dp.include_router(router)